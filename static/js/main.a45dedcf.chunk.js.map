{"version":3,"sources":["components/Tempapp.js","App.js","reportWebVitals.js","index.js"],"names":["require","config","Tempapp","useState","city","setCity","weather","setWeather","wind","setWind","countrycode","setCountryCode","cordinates","setCordinates","search","setSearch","useEffect","a","url","process","fetch","response","json","data","main","sys","coord","fetchApi","className","type","placeholder","value","onChange","e","target","temp","temp_min","temp_max","feels_like","humidity","description","speed","toFixed","country","lon","lat","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAGAA,EAAQ,IAAUC,SAElB,IA4FeC,EA5FC,WAAO,IAAD,EACIC,mBAAS,MADb,mBACbC,EADa,KACPC,EADO,OAEUF,mBAAS,MAFnB,mBAEbG,EAFa,KAEJC,EAFI,OAGIJ,mBAAS,MAHb,mBAGbK,EAHa,KAGPC,EAHO,OAIkBN,mBAAS,MAJ3B,mBAIbO,EAJa,KAIAC,EAJA,OAKgBR,mBAAS,MALzB,mBAKbS,EALa,KAKDC,EALC,OAMQV,mBAAS,iBANjB,mBAMbW,EANa,KAMLC,EANK,KAuBpB,OAfAC,qBAAU,YACM,uCAAG,gCAAAC,EAAA,6DACTC,EADS,2DACiDJ,EADjD,+BAC8EK,oCAD9E,SAEQC,MAAMF,GAFd,cAETG,EAFS,gBAGIA,EAASC,OAHb,OAGTC,EAHS,OAIflB,EAAQkB,EAAKC,MACbjB,EAAWgB,EAAKjB,SAChBG,EAAQc,EAAKf,MACbG,EAAeY,EAAKE,KACpBZ,EAAcU,EAAKG,OARJ,4CAAH,qDAWdC,KACC,CAACb,IAGF,qCACE,sBAAKc,UAAU,MAAf,UACE,qBAAKA,UAAU,YAAf,SACE,uBACEC,KAAK,SACLC,YAAY,qBACZF,UAAU,aACVG,MAAOjB,EACPkB,SAAU,SAACC,GACTlB,EAAUkB,EAAEC,OAAOH,YAKzB,qBAAKH,UAAU,WAAf,SACE,+BACE,mBAAGA,UAAU,cADf,+BAKAxB,EAGA,gCACE,sBAAKwB,UAAU,OAAf,UACE,qBAAIA,UAAU,WAAd,UACE,mBAAGA,UAAU,sBACZd,KAEH,qBAAIc,UAAU,OAAd,UAAsBxB,EAAK+B,KAA3B,aACA,qBAAIP,UAAU,cAAd,mBACSxB,EAAKgC,SADd,mBACqChC,EAAKiC,SAD1C,aAGA,qBAAIT,UAAU,aAAd,wBAAuCxB,EAAKkC,WAA5C,aACA,qBAAIV,UAAU,WAAd,wBAAqCxB,EAAKmC,SAA1C,OACCjC,EACC,qBAAIsB,UAAU,cAAd,mCACyBtB,EAAQ,GAAGkC,eAElC,KACHhC,EACC,qBAAIoB,UAAU,aAAd,2BAC8B,IAAbpB,EAAKiC,OAAaC,QAAQ,GAD3C,UACsD,IACnDlC,EAAKiC,MAFR,UAIE,KACH/B,EACC,qBAAIkB,UAAU,eAAd,4BACkBlB,EAAYiC,WAE5B,KACH/B,EACC,qBAAIgB,UAAU,aAAd,yBACehB,EAAWgC,IAD1B,iBAC6ChC,EAAWiC,OAEtD,QAEN,qBAAKjB,UAAU,YApCjB,mBAAGA,UAAU,WAAb,2CAwCJ,qBAAKA,UAAU,UAAf,SACE,yFCpFOkB,MAJf,WACE,OAAQ,cAAC,EAAD,KCQKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a45dedcf.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./css/style.css\";\n\nrequire(\"dotenv\").config();\n\nconst Tempapp = () => {\n  const [city, setCity] = useState(null);\n  const [weather, setWeather] = useState(null);\n  const [wind, setWind] = useState(null);\n  const [countrycode, setCountryCode] = useState(null);\n  const [cordinates, setCordinates] = useState(null);\n  const [search, setSearch] = useState(\"Visakhapatnam\");\n\n  useEffect(() => {\n    const fetchApi = async () => {\n      const url = `http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=${process.env.REACT_APP_API_KEY}`;\n      const response = await fetch(url);\n      const data = await response.json();\n      setCity(data.main);\n      setWeather(data.weather);\n      setWind(data.wind);\n      setCountryCode(data.sys);\n      setCordinates(data.coord);\n    };\n\n    fetchApi();\n  }, [search]);\n\n  return (\n    <>\n      <div className=\"box\">\n        <div className=\"inputData\">\n          <input\n            type=\"search\"\n            placeholder=\"Enter city name...\"\n            className=\"inputField\"\n            value={search}\n            onChange={(e) => {\n              setSearch(e.target.value);\n            }}\n          />\n        </div>\n\n        <div className=\"sun-icon\">\n          <h1>\n            <i className=\"fa fa-sun\"></i> Sunshine - Weather App\n          </h1>\n        </div>\n\n        {!city ? (\n          <p className=\"errorMsg\">No data found üò¢</p>\n        ) : (\n          <div>\n            <div className=\"info\">\n              <h2 className=\"location\">\n                <i className=\"fa fa-street-view\"></i>\n                {search}\n              </h2>\n              <h3 className=\"temp\">{city.temp}¬∞Cel</h3>\n              <h3 className=\"tempmin_max\">\n                Min : {city.temp_min}¬∞Cel | Max : {city.temp_max}¬∞Cel\n              </h3>\n              <h3 className=\"feels-like\">Feels like {city.feels_like}¬∞Cel</h3>\n              <h3 className=\"humidity\">Humidity : {city.humidity}%</h3>\n              {weather ? (\n                <h3 className=\"weatherdesc\">\n                  Weather Description : {weather[0].description}\n                </h3>\n              ) : null}\n              {wind ? (\n                <h3 className=\"wind-speed\">\n                  Wind Speed : {(wind.speed * 3.6).toFixed(2)} kmph /{\" \"}\n                  {wind.speed} mps\n                </h3>\n              ) : null}\n              {countrycode ? (\n                <h3 className=\"country-code\">\n                  Country Code : {countrycode.country}\n                </h3>\n              ) : null}\n              {cordinates ? (\n                <h3 className=\"cordinates\">\n                  Longitude : {cordinates.lon} | Latitude : {cordinates.lat}\n                </h3>\n              ) : null}\n            </div>\n            <div className=\"wave\"></div>\n          </div>\n        )}\n      </div>\n      <div className=\"crafted\">\n        <h3>Crafted with ‚ù§Ô∏è by Shubham üòÑ</h3>\n      </div>\n    </>\n  );\n};\n\nexport default Tempapp;\n","import \"./App.css\";\nimport Tempapp from \"./components/Tempapp\";\n\nfunction App() {\n  return (<Tempapp />) ;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}